Params.set_params(int_precision=32, f=16, k=32)
NUM_PARTIES = 3

SGD_ITERS = 10
data_sizes = [10, 10, 10]
total_samples = sum(data_sizes)
dim = 10
BATCH_SIZE = 5

LEVELS = 3
TOTAL_NODES = (2 ** LEVELS) - 1

# The columns are:
# feature index
# split value
# index of left child (or prediction value, if the it's a leaf node)
# index of right child
tree = s_fix_mat.read_input(TOTAL_NODES, 4, 0)

w = tree[0]
x = s_fix_array.read_input(dim, 0)

for i in range(LEVELS-1):
    index = w[0]
    split = w[1]
    left_child = w[2]
    right_child = w[3]

    f = x[index]
    cond = (f < split)
    w_res = array_index_secret_load_if(cond, tree, left_child, right_child)
    mat_assign(w, w_res)

reveal_all(w[1], "Final prediction class")

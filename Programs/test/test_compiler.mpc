# A = sintMatrix(3, 3)
# B = sintMatrix(3, 3)

# @for_range(A.rows)
# def f(i):
#     @for_range(A.columns)
#     def g(j):
#         A[i][j] = sint.get_private_input_from(0)

# @for_range(B.rows)
# def f(i):
#     @for_range(B.columns)
#     def g(j):
#         B[i][j] = sint.get_private_input_from(1)
        
# C = matmul(A, B)

# @for_range(C.rows)
# def f(i):
#     @for_range(C.columns)
#     def g(j):
#         print_ln("C = %s", C[i][j].reveal())

# l = []
# for i in range(32):
#     l.append(sint(i))

# # l = Array(3, sint)
# # l[0] = sint(1)
# # l[1] = sint(2)
# # l[2] = sint(3)

# res = int_multiply(l)

# print_ln("res = %s", res.reveal())


# A = MixMatrix(2, 2, [pint(1, 1), pint(1, 2), pint(2, 1), pint(2, 2)])
# B = MixMatrix(2, 2, [pint(1, 3), pint(1, 4), pint(2, 3), pint(2, 4)])

# A = MixMatrix(2, 2)
# B = MixMatrix(2, 2)

# @for_range(2)
# def f(i):
#     @for_range(2)
#     def g(j):
#         v = pint(0, 1)
#         A.set(i * B.columns + j, v)

# @for_range(B.rows)
# def f(i):
#     @for_range(B.columns)
#     def g(j):
#         v = pint(0, 2)
#         B.set(i * B.columns + j, v)

#C = matmul(A, B)

# open_channel(0)
# open_channel(1)
# open_channel(2)

# a=pint.get_private_input_from(0, 0)
# b=pint.get_private_input_from(0, 1)

# c=pint.get_private_input_from(1, 0)
# d=pint.get_private_input_from(1, 1)

# x = a * b
# y = c * d

# x.reveal_to(0)

a = sint_gc(10, input_party=0)
b = sint_gc(10, input_party=0)

c = (a > b)
